plugins.withType(JavaPlugin) {
	if (git_ready) {
		jar.doFirst {
			println('Injecting custom information into manifest')
			manifest {
				 attributes(
					'Implementation-Title': rootProject.name,
					'Implementation-Version': project.version,
					'Implementation-Vendor': 'Ca\' Foscari University of Venice',
					'Created-By': "Gradle ${gradle.gradleVersion}",
					'Build-Revision': git_cid,
					'Build-Tag': git_tag,
					'Build-Branch': git_branch,
					'Build-Clean': git_is_clean,
					'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
					'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
					'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
				)
			}
		}
	}
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withJavadocJar()
    withSourcesJar()
}

ext.moduleName = 'it.unive.lisa'

// this fixes the javadoc search adding the "undefined" prefix to the package name when searching
final JAVADOC_FIX_SEARCH_STR = '\n\n' +
'getURLPrefix = function(ui) {\n' +
'    return \'\';\n' +
'};\n'

javadoc {
	if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    
    moduleOptions {
        addModules = [
        	'java.base',
            'org.apache.commons.lang3',
            'gs.core',
            'com.fasterxml.jackson.databind',
        ]
    }
    
    options.with {
        // links to external docs
        links "https://docs.oracle.com/en/java/javase/${JavaVersion.current()}/docs/api/"
    }

    doLast {
        // append the fix to the file
        def searchScript = new File(destinationDir.getAbsolutePath() + '/search.js')
        searchScript.append JAVADOC_FIX_SEARCH_STR
    }
    
	inputs.property('moduleName', moduleName)
	exclude "**/module-info.java"
}
